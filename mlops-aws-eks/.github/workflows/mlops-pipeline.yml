name: MLOps CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  AWS_REGION: us-west-2
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-push:
    name: Build & Push Docker Images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Training Image
        run: |
          docker build -t $ECR_REGISTRY/train:${IMAGE_TAG} -f docker/Dockerfile.train .
          docker push $ECR_REGISTRY/train:${IMAGE_TAG}

      - name: Build and Push API Image
        run: |
          docker build -t $ECR_REGISTRY/api:${IMAGE_TAG} -f docker/Dockerfile.api .
          docker push $ECR_REGISTRY/api:${IMAGE_TAG}

  deploy:
    name: Deploy to EKS using Helm
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: v1.29.0

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.14.0

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region $AWS_REGION --name ${{ secrets.EKS_CLUSTER_NAME }}

      - name: Deploy MLflow
        run: |
          helm upgrade --install mlflow ./k8s/charts/mlflow \
            --namespace mlops --create-namespace \
            --set image.repository=$ECR_REGISTRY/train \
            --set image.tag=$IMAGE_TAG

      - name: Deploy FastAPI Serving
        run: |
          helm upgrade --install api ./k8s/charts/api \
            --namespace mlops \
            --set image.repository=$ECR_REGISTRY/api \
            --set image.tag=$IMAGE_TAG
